#!/bin/csh 
#
# Stand alone script to launch GPI DRP IDL programs.
# Launches two xterms for the two IDL sessions.
#
#
# Note: This code assumes that the GPI DRP code is already in your $IDL_PATH.


# We need to know the GPI DRP path to invoke the proper scripts to launch the
# GUIs. If that is not already defined as an environment variable, launch IDL
# first quickly to query IDL for what the default setting is. 
if ! $?GPI_DRP_DIR then 
   set GPI_DRP_DIR=`idl -e "print, gpi_get_directory('GPI_DRP_DIR')"`
endif



# Colors and sizes of xterms are purely cosmetic, change the below as you desire.

# start the GUIs:
\xterm -bg \#000033 -fg \#CCCC00 -geometry 80x30+20+20  -sb +ls -T 'idl: GPI DRP GUIs' -e idl $GPI_DRP_DIR/scripts/gpi-pipeline__launchguis.pro  &

sleep 0.25 # slight pause, in some cases helps avoid redundant dialogs about missing directories since the first pipeline may create them before the second starts

# Start the pipeline:
\xterm -bg \#000033 -fg \#FFFFAA -geometry 80x30+20+450 -sb +ls -T 'idl: GPI Pipeline' -e idl $GPI_DRP_DIR/scripts/gpi-pipeline__launchdrp.pro   &






# old versions of this code:
# Note: You may think we could just start the pipeline and run the commands
# directly, as in the following:
#     \xterm -bg \#000033 -fg \#FFFFAA -geometry 80x30+20+450 -sb +ls -T 'idl: GPI Pipeline' -e idl -e  "\!quiet=0 & gpipiperun "  &
# That does work to start the pipeline, **BUT** it does not give you access to
# the IDL command line in the same session. If anything goes wrong it either
# blocks or closes the IDL session entirely; either way you can't get to the IDL
# command prompt to debug. Thus, starting the way it's done above using wrapper
# procedures is the best approach. -MP
