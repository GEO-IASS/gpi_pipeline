;+
; NAME: read6thorbitcat
; Calculate Angular separation and Position Angle of a double star system
; included in the Sixth Orbit Catalog
;
;
;	Method: Use SIMBAD to look up the HIPPARCOS catalog number of the specified
;	target star. Then look up the orbital elements from the WDS 6th orbit
;	catalog.
;
;
;   Written by Jerome Maire 2010-01
;   2012-01-30 MP: Paths updated.

function checkconv, str

if (strlen(strtrim(str,2)) eq 0) || strcmp(strtrim(str,2), '.') eq 1 then strout='0' else strout=str

return,strout
end


;-------------------


function read6thorbitcat, name, dateobs, timeobs 

if ~(keyword_set(name)) then begin
	message, 'Input star name is not defined!',/info
 	return,{sep:!values.f_nan,PA:!values.f_nan} 
endif

binarystarsfile=  gpi_get_directory('GPI_DRP_CONFIG_DIR')+path_sep()+('orb6orbits.txt')


if ~file_test(binarystarsfile) then begin 
		message,"Cannot find required binary star catalog file! Check for and fix: ",/info
		message, binarystarsfile,/info
		stop
end

start=8
totbinary=2203-start+1
RA=dblarr(totbinary) ;Epoch-2000 coordinates,usually given to 0.01s accuracy in right ascension and 0.1" in declination. Most coordinates were extracted from the Tycho-2 catalog. 
DEC=dblarr(totbinary) 
WDSra=lonarr(totbinary) ;Washington Double Star (WDS) designation. Many of these coordinates (given to 0.1m and 1') were generated by precessing lower precision B1900 positions to J2000; therefore the WDS designations may vary slightly from the coordinates in column 1. 
WDSdec=lonarr(totbinary) 
WDS=strarr(totbinary)
DD=strarr(totbinary);Discoverer designation and components involved. If no components are listed, the orbit is of the AB pair.
ADS=lonarr(totbinary) ;ADS (Aitken Double Star catalog) number. 
HD=lonarr(totbinary) ;HD (Henry Draper catalog) number.  
HIP=lonarr(totbinary);Hipparcos number. 
V1=fltarr(totbinary);Magnitude of the primary component. Codes ">" and "<" preceding the magnitude indicate the value is an upper or lower limit. Codes "v" or "k" following the value indicates a star of variable magnitude or a K-band magnitude.
V1code=strarr(totbinary)
V2=fltarr(totbinary);Magnitude of the secondary component. Codes are as described for the primary. 
V2code=strarr(totbinary)
P=dblarr(totbinary) ;The period (P), followed by code indicating units ("d" = days, "y" = years, "c" = centuries).
Punit=strarr(totbinary)
Perr=dblarr(totbinary);Published formal errors in P. Units are the same as for P. 
sma=dblarr(totbinary);The semi-major axis (a), followed by code indicating units ("a" = arcseconds, "m" = milliarcseconds).
smaunit=strarr(totbinary)
smaErr=dblarr(totbinary);Published formal errors in a. Units are the same as for i. 
Inc=dblarr(totbinary);The inclination (i), in degrees.  
Ierr=dblarr(totbinary);Published formal errors in i. 
N=dblarr(totbinary) ;The node (Omega), in degrees. An identified ascending node is indicated by an asterisk following the value.
Nas=strarr(totbinary)
Nerr=dblarr(totbinary);Published formal errors in Omega. 
T=dblarr(totbinary) ;The time of periastron passage (T), followed by code indicating units ("d" = modified Julian date, "y" = fractional Besselian year).
Tunits=strarr(totbinary)
Terr=dblarr(totbinary);Published formal errors in T. Units are the same as for T. 
E=dblarr(totbinary) ;The eccentricity (e). 
Eerr=dblarr(totbinary); Published formal errors in e.
O=dblarr(totbinary); The longitude of periastron (w), in degrees, reckoned from the node as listed.
Oerr=dblarr(totbinary); Published formal errors in w.
Eqnx=intarr(totbinary); Equinox, if any, to which the node refers.
Last=intarr(totbinary); The date of the last observation used in the orbit calculation, when given. 
g=intarr(totbinary); The grade (to nearest integer), as previously discussed.
nn=strarr(totbinary); A link "N" to any notes for this system.
; A link "P" to a figure illustrating the orbit and all data for this object currently tabulated in the WDS database. Symbols used in these figures are as in Figure 1.;not in datafile, see http://ad.usno.navy.mil/wds/orb6/orb6orbits.html
; A link "E" to appropriate entries in the ephemeris file.;not in datafile, see http://ad.usno.navy.mil/wds/orb6/orb6orbits.html
ref=strarr(totbinary); A code for the reference (usually based on the name of the first author and the date of publication), with a link to a reference file. 

   OPENR, unit, binarystarsfile, /GET_LUN 
   str = '' 
   count = 0ll 
   
   ; Set up CATCH error handler.
;      Catch, theError
;      IF theError NE 0 THEN BEGIN
;        Catch, /Cancel
;        bad_io:
;        ;Print, 'Type Conversion Error Occurred, Repairing...'
;      ENDIF

      ; Set up file I/O error handling.
      ;ON_IOError, bad_io


   
   WHILE ~ EOF(unit) DO BEGIN 
      READF, unit, str 
      count = count + 1 
     
     if count ge 8  then begin
      RA[count-start]=double(checkconv(strmid(str,0,9)))
      DEC[count-start]=double(checkconv(strmid(str,9,9)))
      WDSra[count-start]=long(checkconv(strmid(str,19,5)))
      WDSdec[count-start]=long(checkconv(strmid(str,24,5)))
      WDS[count-start]=strmid(str,19,10)
      DD[count-start]=strmid(str,30,14)
      ADS[count-start]=long(checkconv(strmid(str,45,5)))
      HD[count-start]=long(checkconv(strmid(str,51,6)))
      HIP[count-start]=long(checkconv(strmid(str,58,6)))
      V1code[count-start]=strmid(str,65,1)
      V1[count-start]=double(checkconv(strmid(str,66,5)))
      if (V1code[count-start] eq ' ') then V1code[count-start]=strmid(str,71,1)
      V2code[count-start]=strmid(str,72,1)
      V2[count-start]=double(checkconv(strmid(str,73,5)))
      if (V2code[count-start] eq ' ') then V2code[count-start]=strmid(str,78,1)
      P[count-start]=double(checkconv(strmid(str,81,11)))      
      Punit[count-start]=strmid(str,92,1)
      Perr[count-start]=double(checkconv(strmid(str,94,11)))
      sma[count-start]=double(checkconv(strmid(str,105,9)) )     
      smaunit[count-start]=strmid(str,114,1)
      smaErr[count-start]=double(checkconv(strmid(str,116,8)))
      Inc[count-start]=double(checkconv(strmid(str,125,8))  )
      Ierr[count-start]=double(checkconv(strmid(str,134,8)))
      N[count-start]=double(checkconv(strmid(str,143,8)))
      Nas[count-start]=strmid(str,151,1)
      Nerr[count-start]=double(checkconv(strmid(str,153,8)) )
      T[count-start]=double(checkconv(strmid(str,162,12)))
      Tunits[count-start]=strmid(str,174,1)
      Terr[count-start]=double(checkconv(strmid(str,176,10)))
      E[count-start]=double(checkconv(strmid(str,187,8)))
      Eerr[count-start]=double(checkconv(strmid(str,196,8)))
      O[count-start]=double(checkconv(strmid(str,205,8)))
      Oerr[count-start]=double(checkconv(strmid(str,214,8)))
      Eqnx[count-start]=uint(checkconv(strmid(str,223,4)))
      Last[count-start]=uint(checkconv(strmid(str,228,4)))
      g[count-start]=uint(checkconv(strmid(str,233,1)))
      nn[count-start]=strmid(str,235,1)
      ; A link "P" to a figure illustrating the orbit and all data for this object currently tabulated in the WDS database. Symbols used in these figures are as in Figure 1.;not in datafile, see http://ad.usno.navy.mil/wds/orb6/orb6orbits.html
      ; A link "E" to appropriate entries in the ephemeris file.;not in datafile, see http://ad.usno.navy.mil/wds/orb6/orb6orbits.html
      ref[count-start]=strmid(str,237,8)
     ;print,count
     ;if ((count mod 50) eq 0) then stop
     endif
   ENDWHILE 
   FREE_LUN, unit 

   ;;;;;;;;
   ;; find observed double stars in the catalog
   S = STRSPLIT(Name, ' ', /EXTRACT) 
   Nameweb= STRJOIN(strtrim(S,1), '+') 
   c=0
   res=webget('http://simbad.u-strasbg.fr/simbad/sim-id?Ident='+nameweb+'&NbIdent=1#lab_ident')
   ;print, strpos(res.text,'<A HREF="http://astro.u-strasbg.fr/cgi-bin/Dic-Simbad?HIP">HIP</A>')
   strhip='<A HREF="http://cds.u-strasbg.fr/cgi-bin/Dic-Simbad?HIP">HIP</A>'
   for i=0,n_elements(res.text)-1 do begin
      if strmatch((res.text)[i],strhip+'*') then begin      
      c=1
      hipnumb=strmid((res.text)[i], strlen(strhip)+1, strlen((res.text)[i])-strlen(strhip))
      endif
   endfor

   if c eq 0 then begin
        print, name+' was not found on simbad identifiers. Please enter the HIP identifier of the primary star:'
        read, hipnumb, prompt='HIP '
   endif

   hipnum=long(hipnumb)
   ic=where(HIP eq hipnum,cc)
   
   if cc eq 0 then begin
        print, 'HIP '+hipnumb+' was not found on the sixth Orbit Catalog. Please enter the WDS identifier of the primary star (ex: 07480+6018 or 07479-1212):'
        read, wdsnumb, prompt='WDS '
        ic=where(WDS eq wdsnumb,ccc)
        if ccc eq 0 then print, 'HIP '+hipnumb+' was not found on the sixth Orbit Catalog.'
        return,0
   endif
   
   if smaunit[ic] eq 'a' then sma_mas=sma[ic]*1000.  else sma_mas=sma[ic]


  splitdateobs=STRSPLIT(dateobs, ' -:', /EXTRACT)
  splittimeobs=STRSPLIT(timeobs, ' -:', /EXTRACT)  
  print, 'JD of observation calculated with: month=',splitdateobs[1],' day=',splitdateobs[2],' year=',splitdateobs[0],' hour=',splittimeobs[0], ' min=',splittimeobs[1],' sec=',splittimeobs[2]
  jd=julday(splitdateobs[1],splitdateobs[2],splitdateobs[0],splittimeobs[0],splittimeobs[1],splittimeobs[2])
  print, 'JD=',jd
  
  ;;d=modified Julian date: MJD = JD âˆ’ 2400000.5
  ;;y=fractional Besselian year
  if Tunits[ic] eq 'd' then tt=T[ic]+2400000.5
  if Tunits[ic] eq 'y' then tt=(T[ic]-2000.)*365.242189 +2451544.53
  ;An approximate formula to compute the current time in Besselian years from the Julian day is
  ;B = 2000 + (JD - 2451544.53) /365.242189 


  if Punit[ic] eq 'd' then pfac=1.
  if Punit[ic] eq 'y' then pfac=365.24

  res=orbit(jd,sma_mas/1000.,e[ic],inc[ic],o[ic],n[ic],tt,pfac*p[ic],sep=sep,pa=pa)
  print, 'Orbital parameters for DD '+strcompress(string(DD[ic])),'  HD '+strcompress(string(HD[ic])),'  HIP',HIP[ic],'  sma[arcsec]=',sma_mas/1000.,'  e=',e[ic],'  i=',i[ic],'  o=',o[ic],'  n=',n[ic],'  t=',tt,'tunit=',Tunits[ic],'  p=',pfac*p[ic]
  print, 'Calculated Angular separation & Position Angle at DATEOBS&TIMEOBS',jd
  print,'  sep[arcsec]= ',sep
  print,'      PA[deg]= ',PA
   
   
 return,{sep:sep,PA:PA} 
   

END 






